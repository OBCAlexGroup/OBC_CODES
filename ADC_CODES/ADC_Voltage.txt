#include"stm32f10x_gpio.h"
#include"stm32f10x_conf.h"
#include"stm32f10x_rcc.h"
#include"stm32f10x.h"
void initADC();
uint32_t getADCValue();
void initGPIO();

void initGPIO()
{
	RCC->APB2ENR |= (1<<2);     // Port A Enable
	GPIOA->CRL |= (0x0<<0);     // Input mode PA0
	GPIOA->CRL |= (0x0<<2);     //Analog input to PA0

}
void initADC(){
    RCC->APB2ENR |= (1<<9);      //Enable ADC1 Clock
    RCC->CFGR |= (0b10<<14);     //set ADC Prescaler '6'
    ADC1->CR1 |= (1<<4);         //Input Channel 16
    ADC1->SQR3 |=(0<<0);
    ADC1->SMPR1 |= (0b100<<18);  //41.5 cycles sample time
    ADC1->CR2 |= (1<<23);        //Enable Temperature Sensor & Vref

    ADC1->CR2 |= (1<<0);         //Enable ADC and start conversion

    ADC1->CR2 |= (1<<3);         //Initialize calibration register
    while(ADC1->CR2 & (1<<3)){   //Wait until calibration register initialized
        ;
    }

    ADC1->CR2 |= (1<<2);         //Enable calibration
    while(ADC1->CR2 & (1<<2)){   //Wait until calibration completed
        ;
    }
}

uint32_t getADCValue(){
    ADC1->CR2 |= (1<<0);         //Enable ADC and start conversion
    while(!(ADC1->SR & (1<<1))){ //Wait until end of conversion
        ;
    }
    return ADC1->DR;
}
int main (void)
{
	initGPIO();
	initADC();
	uint32_t adcVal;
	while(1)
	{
		adcVal = getADCValue();
		float volt=(adcVal*0.004092);
		


	}
}
